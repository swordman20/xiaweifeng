import{_ as e,o as t,c as p,a as n,b as c,e as o,d as s,r as l}from"./app.3222cd28.js";const i={},u=o(`<h1 id="request-getinputstream-\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#request-getinputstream-\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u95EE\u9898" aria-hidden="true">#</a> request.getInputStream()\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u95EE\u9898</h1><p><strong>\u80CC\u666F</strong></p><p>\u901A\u5E38\u5BF9\u5B89\u5168\u6027\u6709\u8981\u6C42\u7684\u63A5\u53E3\u90FD\u4F1A\u5BF9\u8BF7\u6C42\u53C2\u6570\u505A\u4E00\u4E9B\u7B7E\u540D\u9A8C\u8BC1\uFF0C\u800C\u6211\u4EEC\u4E00\u822C\u4F1A\u628A\u9A8C\u7B7E\u7684\u903B\u8F91\u7EDF\u4E00\u653E\u5230\u8FC7\u6EE4\u5668\u6216\u62E6\u622A\u5668\u91CC\uFF0C\u8FD9\u6837\u5C31\u4E0D\u7528\u6BCF\u4E2A\u63A5\u53E3\u90FD\u53BB\u91CD\u590D\u7F16\u5199\u9A8C\u7B7E\u7684\u903B\u8F91\u3002\u5728\u4E00\u4E2A\u9879\u76EE\u4E2D\u4F1A\u6709\u5F88\u591A\u7684\u63A5\u53E3\uFF0C\u800C\u4E0D\u540C\u7684\u63A5\u53E3\u53EF\u80FD\u63A5\u6536\u4E0D\u540C\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u4F8B\u5982\u8868\u5355\u6570\u636E\u548Cjson\u6570\u636E\uFF0C\u8868\u5355\u6570\u636E\u8FD8\u597D\u8BF4\uFF0C\u8C03\u7528request\u7684getParameterMap\u5C31\u80FD\u5168\u90E8\u53D6\u51FA\u6765\u3002\u800Cjson\u6570\u636E\u5C31\u6709\u4E9B\u9EBB\u70E6\u4E86\uFF0C\u56E0\u4E3Ajson\u6570\u636E\u653E\u5728body\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u901A\u8FC7request\u7684\u8F93\u5165\u6D41\u53BB\u8BFB\u53D6\u3002</p><p>\u4F46\u95EE\u9898\u5728\u4E8E <strong>request\u7684\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21</strong> \u4E0D\u80FD\u91CD\u590D\u8BFB\u53D6\uFF0C\u6240\u4EE5\u6211\u4EEC\u5728\u8FC7\u6EE4\u5668\u6216\u62E6\u622A\u5668\u91CC\u8BFB\u53D6\u4E86request\u7684\u8F93\u5165\u6D41\u4E4B\u540E\uFF0C\u8BF7\u6C42\u8D70\u5230controller\u5C42\u65F6\u5C31\u4F1A\u62A5\u9519\u3002\u800C\u672C\u6587\u7684\u76EE\u7684\u5C31\u662F\u4ECB\u7ECD\u5982\u4F55\u89E3\u51B3\u5728\u8FD9\u79CD\u573A\u666F\u4E0B\u9047\u5230HttpServletRequest\u7684\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u7684\u95EE\u9898\u3002</p><h2 id="httpservletrequest\u7684\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u7684\u539F\u56E0" tabindex="-1"><a class="header-anchor" href="#httpservletrequest\u7684\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u7684\u539F\u56E0" aria-hidden="true">#</a> HttpServletRequest\u7684\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u7684\u539F\u56E0</h2><p>\u6211\u4EEC\u5148\u6765\u770B\u770B\u4E3A\u4EC0\u4E48HttpServletRequest\u7684\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u4E00\u6B21\uFF0C\u5F53\u6211\u4EEC\u8C03\u7528getInputStream()\u65B9\u6CD5\u83B7\u53D6\u8F93\u5165\u6D41\u65F6\u5F97\u5230\u7684\u662F\u4E00\u4E2A<code>InputStream</code>\u5BF9\u8C61\uFF0C\u800C\u5B9E\u9645\u7C7B\u578B\u662FServletInputStream\uFF0C\u5B83\u7EE7\u627F\u4E8EInputStream\u3002</p><p><strong><code>InputStream</code>\u7684read()\u65B9\u6CD5\u5185\u90E8\u6709\u4E00\u4E2Apostion\uFF0C\u6807\u5FD7\u5F53\u524D\u6D41\u88AB\u8BFB\u53D6\u5230\u7684\u4F4D\u7F6E\uFF0C\u6BCF\u8BFB\u53D6\u4E00\u6B21\uFF0C\u8BE5\u6807\u5FD7\u5C31\u4F1A\u79FB\u52A8\u4E00\u6B21\uFF0C\u5982\u679C\u8BFB\u5230\u6700\u540E\uFF0Cread()\u4F1A\u8FD4\u56DE-1\uFF0C\u8868\u793A\u5DF2\u7ECF\u8BFB\u53D6\u5B8C\u4E86\u3002\u5982\u679C\u60F3\u8981\u91CD\u65B0\u8BFB\u53D6\u5219\u9700\u8981\u8C03\u7528reset()\u65B9\u6CD5\uFF0Cposition\u5C31\u4F1A\u79FB\u52A8\u5230\u4E0A\u6B21\u8C03\u7528mark\u7684\u4F4D\u7F6E\uFF0Cmark\u9ED8\u8BA4\u662F0\uFF0C\u6240\u4EE5\u5C31\u80FD\u4ECE\u5934\u518D\u8BFB\u4E86\u3002\u8C03\u7528reset()\u65B9\u6CD5\u7684\u524D\u63D0\u662F\u5DF2\u7ECF\u91CD\u5199\u4E86reset()\u65B9\u6CD5\uFF0C\u5F53\u7136\u80FD\u5426reset\u4E5F\u662F\u6709\u6761\u4EF6\u7684\uFF0C\u5B83\u53D6\u51B3\u4E8EmarkSupported()\u65B9\u6CD5\u662F\u5426\u8FD4\u56DEtrue\u3002</strong></p><p><code>InputStream</code>\u9ED8\u8BA4\u4E0D\u5B9E\u73B0reset()\uFF0C\u5E76\u4E14markSupported()\u9ED8\u8BA4\u4E5F\u662F\u8FD4\u56DEfalse\uFF0C\u8FD9\u4E00\u70B9\u67E5\u770B\u5176\u6E90\u7801\u4FBF\u77E5\uFF1A <img src="https://gitee.com/xiaweifeng/picgo/raw/master/images/202301121906681.png" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p>\u6211\u4EEC\u518D\u6765\u770B\u770B<code>ServletInputStream</code>\uFF0C\u53EF\u4EE5\u770B\u5230\u8BE5\u7C7B\u6CA1\u6709\u91CD\u5199mark()\uFF0Creset()\u4EE5\u53CAmarkSupported()\u65B9\u6CD5\uFF1A</p><p><img src="https://gitee.com/xiaweifeng/picgo/raw/master/images/202301121906023.png" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"></p><p><strong>\u7EFC\u4E0A\uFF0CInputStream\u9ED8\u8BA4\u4E0D\u5B9E\u73B0reset\u7684\u76F8\u5173\u65B9\u6CD5\uFF0C\u800CServletInputStream\u4E5F\u6CA1\u6709\u91CD\u5199reset\u7684\u76F8\u5173\u65B9\u6CD5\uFF0C\u8FD9\u6837\u5C31\u65E0\u6CD5\u91CD\u590D\u8BFB\u53D6\u6D41\uFF0C\u8FD9\u5C31\u662F\u6211\u4EEC\u4ECErequest\u5BF9\u8C61\u4E2D\u83B7\u53D6\u7684\u8F93\u5165\u6D41\u5C31\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u7684\u539F\u56E0\u3002</strong></p><h2 id="\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684httpservletrequest\u5305\u88C5\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684httpservletrequest\u5305\u88C5\u7C7B" aria-hidden="true">#</a> \u4F7F\u7528\u81EA\u5B9A\u4E49\u7684HttpServletRequest\u5305\u88C5\u7C7B</h2><p>\u65E2\u7136<code>ServletInputStream</code>\u4E0D\u652F\u6301\u91CD\u590D\u8BFB\u6D41\u4E2D\u7684\u6570\u636E\uFF0C\u90A3\u4E48\u6211\u4EEC\u5C31\u81EA\u5B9A\u4E49\u4E00\u4E2A\u5B50\u7C7B\uFF0C\u5BF9HttpSerlvetRequest\u7C7B\u8FDB\u884C\u5305\u88C5\u589E\u5F3A\uFF0C\u5C06<code>ServletInputStream</code>\u4E2D\u7684\u6D41\u6570\u636E\u4FDD\u5B58\u8D77\u6765\uFF0C \u5728\u8BFBrequest\u6D41\u6570\u636E\u65F6\uFF0C\u5C06\u4FDD\u5B58\u8D77\u6765\u7684\u6570\u636E\u8FD4\u56DE\u5373\u53EF\u3002</p><p>\u6240\u5E78JavaEE API\u4E2D\u63D0\u4F9B\u4E86\u4E00\u4E2A<code>HttpServletRequestWrapper</code>\u7C7B\uFF0C\u4ECE\u7C7B\u540D\u53EF\u4EE5\u770B\u51FA\u5B83\u662F\u4E00\u4E2AHttp\u8BF7\u6C42\u5305\u88C5\u5668\uFF0C\u662F\u57FA\u4E8E\u88C5\u9970\u8005\u6A21\u5F0F\u5E76\u5B9E\u73B0\u4E86<code>HttpServletRequest</code>\u63A5\u53E3\u3002 <img src="https://gitee.com/xiaweifeng/picgo/raw/master/images/202301121907782.png" alt="\u5728\u8FD9\u91CC\u63D2\u5165\u56FE\u7247\u63CF\u8FF0"> \u4ECE\u4E0A\u56FE\u6E90\u7801\u53EF\u4EE5\u770B\u5230\uFF0C\u8BE5\u7C7B\u5E76\u6CA1\u6709\u771F\u6B63\u53BB\u5B9E\u73B0<code>HttpServletRequest</code>\u7684\u65B9\u6CD5\uFF0C\u800C\u662F\u5728\u65B9\u6CD5\u5185\u53C8\u53BB\u8C03\u7528ServletRequest\u7684\u65B9\u6CD5\u3002\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u7EE7\u627F\u8BE5\u7C7B\u5E76\u5B9E\u73B0\u60F3\u8981\u91CD\u65B0\u5B9A\u4E49\u7684\u65B9\u6CD5\u5DF2\u8FBE\u5230\u5305\u88C5\u539F\u751F<code>SerlvetRequest</code>\u5BF9\u8C61\u7684\u76EE\u7684\u3002</p><h2 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848\uFF1A</h2><p>\u9996\u5148\u6211\u4EEC\u9700\u8981\u5B9A\u4E49\u4E00\u4E2A\u5BB9\u5668\uFF0C\u5C06\u8F93\u5165\u6D41\u4E2D\u7684\u6570\u636E\u4FDD\u5B58\u8FDB\u5BB9\u5668\u4E2D\uFF0C\u7136\u540E\u91CD\u5199<code>HttpServletRequestWrapper</code>\u4E2D\u7684<code>getInputStream()</code>\u65B9\u6CD5\uFF0C\u6BCF\u6B21\u90FD\u4ECE\u8FD9\u4E2A\u5BB9\u5668\u4E2D\u8BFB\u6570\u636E\u3002\u8FD9\u6837request\u7684\u8F93\u5165\u6D41\u5C31\u53EF\u4EE5\u91CD\u590D\u8BFB\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u89E3\u51B3request\u6D41\u53EA\u8BFB\u53D6\u4E00\u6B21\u7684\u95EE\u9898
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestWrapper</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServletRequestWrapper</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * \u5B58\u50A8body\u6570\u636E\u7684\u5BB9\u5668
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> body<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">RequestWrapper</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5C06body\u6570\u636E\u5B58\u50A8\u8D77\u6765</span>
        body <span class="token operator">=</span> <span class="token function">getBodyString</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">defaultCharset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u83B7\u53D6\u8BF7\u6C42Body
     *
     * <span class="token keyword">@param</span> <span class="token parameter">request</span> request
     * <span class="token keyword">@return</span> String
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBodyString</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">inputStream2String</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u83B7\u53D6\u8BF7\u6C42Body
     *
     * <span class="token keyword">@return</span> String
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getBodyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">inputStream2String</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5C06inputStream\u91CC\u7684\u6570\u636E\u8BFB\u53D6\u51FA\u6765\u5E76\u8F6C\u6362\u6210\u5B57\u7B26\u4E32
     *
     * <span class="token keyword">@param</span> <span class="token parameter">inputStream</span> inputStream
     * <span class="token keyword">@return</span> String
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">inputStream2String</span><span class="token punctuation">(</span><span class="token class-name">InputStream</span> inputStream<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">defaultCharset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> line<span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>reader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    reader<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">BufferedReader</span> <span class="token function">getReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ServletInputStream</span> <span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token keyword">final</span> <span class="token class-name">ByteArrayInputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServletInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setReadListener</span><span class="token punctuation">(</span><span class="token class-name">ReadListener</span> readListener<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u914D\u7F6E\u8FC7\u6EE4\u5668\uFF0C\u73B0\u5728\u6709\u4E86\u5305\u88C5\u7C7B\uFF0C\u8BE5\u600E\u4E48\u5C06\u539F\u672C\u7684<code>HttpServletRequest</code>\u66FF\u6362\u6210\u6211\u4EEC\u81EA\u5DF1\u7684request\u5462\uFF1F\u4F7F\u7528Filter\u5728doFilter(req,resp)\u4E2D\u5C06req\u66FF\u6362\u6210\u6211\u4EEC\u81EA\u5DF1\u7684<code>RequestWrapper</code>\u5C31\u53EF\u4EE5\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token doc-comment comment">/**
 * \u89E3\u51B3request\u6D41\u53EA\u8BFB\u53D6\u4E00\u6B21\u7684\u95EE\u9898
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReplaceStreamFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ServletRequest</span> requestWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestWrapper</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>requestWrapper<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FilterConfig</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u6CE8\u518C\u8FC7\u6EE4\u5668
     *
     * <span class="token keyword">@return</span> FilterRegistrationBean
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span> <span class="token function">someFilterRegistration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">FilterRegistrationBean</span> registration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span><span class="token function">replaceStreamFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">addUrlPatterns</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        registration<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">&quot;streamFilter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> registration<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token doc-comment comment">/**
     * \u5B9E\u4F8B\u5316StreamFilter
     *
     * <span class="token keyword">@return</span> Filter
     */</span>
    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;replaceStreamFilter&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Filter</span> <span class="token function">replaceStreamFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReplaceStreamFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u6211\u4EEC\u5C31\u53EF\u4EE5\u5728\u62E6\u622A\u5668\u4E2D\u6109\u5FEB\u7684\u83B7\u53D6request\u6D41\u4E2D\u7684\u6570\u636E\uFF0C\u518D\u4E5F\u4E0D\u7528\u62C5\u5FC3Controller\u4E86~</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SignatureInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[preHandle] executing... request uri is {}&quot;</span><span class="token punctuation">,</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isJson</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u83B7\u53D6json\u5B57\u7B26\u4E32</span>
            <span class="token class-name">String</span> jsonParam <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestWrapper</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBodyString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[preHandle] json\u6570\u636E : {}&quot;</span><span class="token punctuation">,</span> jsonParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
            <span class="token comment">// \u9A8C\u7B7E\u903B\u8F91...\u7565...</span>
        <span class="token punctuation">}</span>
 
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5224\u65AD\u672C\u6B21\u8BF7\u6C42\u7684\u6570\u636E\u7C7B\u578B\u662F\u5426\u4E3Ajson
     *
     * <span class="token keyword">@param</span> <span class="token parameter">request</span> request
     * <span class="token keyword">@return</span> boolean
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isJson</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON_VALUE</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                    request<span class="token punctuation">.</span><span class="token function">getContentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON_UTF8_VALUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
 
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u5C31\u53EF\u4EE5\u6D4B\u8BD5\u4E00\u4E0B\u5728\u62E6\u622A\u5668\u4E2D\u8BFB\u53D6\u4E86\u8F93\u5165\u6D41\u540E\u5728controller\u5C42\u662F\u5426\u8FD8\u80FD\u6B63\u5E38\u63A5\u6536\u6570\u636E\uFF0C\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/user&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoController</span> <span class="token punctuation">{</span>
 
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/register&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">UserParam</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">UserParam</span> userParam<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> userParam<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u542F\u52A8\u9879\u76EE\uFF0C\u8BF7\u6C42\u7ED3\u679C\u5982\u4E0B\uFF0C\u53EF\u4EE5\u770B\u5230controller\u6B63\u5E38\u63A5\u6536\u5230\u6570\u636E\u5E76\u8FD4\u56DE\u4E86</p>`,24),r=s("\u53C2\u8003\u94FE\u63A5\uFF1A"),k={href:"https://blog.csdn.net/qq_16159433/article/details/120922952",target:"_blank",rel:"noopener noreferrer"},d=s("request.getInputStream()\u8F93\u5165\u6D41\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u95EE\u9898");function v(m,b){const a=l("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[r,n("a",k,[d,c(a)])])])}var w=e(i,[["render",v],["__file","request.getInputStream\u53EA\u80FD\u8BFB\u53D6\u4E00\u6B21\u95EE\u9898.html.vue"]]);export{w as default};
